{"version":3,"sources":["services/axiosService.js","components/Header.js","components/Temperatures.js","components/Zip.js","App.js","index.js"],"names":["Axios","zip","requestObject","method","url","axios","Header","weatherDetails","this","props","weatherData","weather","undefined","Row","className","Col","xs","name","src","icon","id","description","Component","Temperatures","formatTemp","temp","Math","round","main","temp_min","temp_max","Zip","_handleKeyDown","e","key","preventDefault","onZipChange","zipInput","current","value","React","createRef","console","log","type","ref","defaultValue","zipCode","onClick","App","componentDidMount","getWeather","state","then","response","setState","data","componentDidUpdate","prevProps","prevState","handleUpdatekEvent","zipData","Container","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.263aadf1.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass Axios {\n    getWeather(zip) {\n        const requestObject = {\n            method: 'GET',\n            url: `https://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=709847967f5e54b97308c1b2cae4dee5&units=imperial`\n        };\n    \n        return axios(requestObject);\n    };\n}\n\nexport default Axios;","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport './styles/Header.scss';\n\nclass Header extends Component {\n    render() {\n        const weatherDetails = this.props.weatherData.weather ? this.props.weatherData?.weather[0] : undefined;\n\n        return (\n            <>\n                <Row className='justify-content-center'>\n                    <Col xs='auto' className='no-padding'>\n                        <h1>{this.props.weatherData?.name}</h1>\n                    </Col>\n                    <Col xs='auto' className='no-padding'>\n                        <img src={`http://openweathermap.org/img/wn/${weatherDetails?.icon}.png`} />\n                    </Col>\n                </Row>\n                <Row className='justify-content-center'>\n                    <p id='weatherDescription'>{weatherDetails?.description}</p>\n                </Row>\n            </>\n        );\n    };\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport './styles/Temperatures.scss';\n\nclass Temperatures extends Component {    \n    formatTemp = (temp) => {\n        return `${Math.round(temp)}\\u00b0`;\n    }\n\n    render() {\n        return (\n            <>\n                <Row className='justify-content-center'>\n                    <p id='temp'>{this.formatTemp(this.props.weatherData?.main?.temp)}</p>\n                </Row>\n                <Row className='justify-content-center'>\n                    <p className='highLowTemps'>{this.formatTemp(this.props.weatherData?.main?.temp_min)}</p>\n                    <p className='highLowTemps'>{this.formatTemp(this.props.weatherData?.main?.temp_max)}</p>\n                </Row>\n            </>\n        );\n    };\n};\n\n\nexport default Temperatures;","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport './styles/Zip.scss';\n\nclass Zip extends Component {\n    constructor() {\n        super();\n        this.zipInput = React.createRef();\n    }\n\n     _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.props.onZipChange(this.zipInput.current.value);\n        };\n    };\n\n    render() {\n        console.log(this.props)\n        return (\n            <>\n                <Row className='justify-content-center'>\n                    <Col xs='auto' className='zipDiv'>\n                        <p id='zipCodeLabel'>Zip Code:</p>\n                    </Col>\n                </Row>\n                <Row className='justify-content-center'>\n                    <Col xs='auto' className='no-padding'>\n                        <input type='text' ref={zip => this.zip = zip} id='zipCodeInput' defaultValue={this.props.zipCode} ref={this.zipInput} onKeyDown={this._handleKeyDown} />\n                    </Col>\n                    <Col xs='auto'>\n                        <button type='button' id='zipCodeButton' onClick={() => this.props.onZipChange(this.zipInput.current.value)}>Update</button>\n                    </Col>\n                </Row>\n            </>\n        );\n    };\n};\n\nexport default Zip;","import React, { Component } from 'react';\nimport Axios from './services/axiosService';\nimport Header from './components/Header';\nimport Temperatures from './components/Temperatures';\nimport Zip from './components/Zip';\nimport { Container } from 'react-bootstrap'\nimport './App.scss';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.axios = new Axios();\n    this.state = {\n      weather: {},\n      zipCode: '10036'\n    }\n  }\n\n  componentDidMount = () => {\n    this.axios.getWeather(this.state.zipCode)\n      .then(response => {\n        this.setState({\n            weather: response.data\n          })\n      });\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if(this.state.zipCode !== prevState.zipCode) {\n      this.axios.getWeather(this.state.zipCode)\n        .then(response => {\n          this.setState({\n              weather: response.data\n            })\n        });\n    }\n  }\n\n  handleUpdatekEvent = (zipData) => {\n    this.setState({\n        zipCode: zipData\n      });\n  };\n\n  render() {\n    console.log(this.state)\n    return (\n      <Container>\n        <Header weatherData={this.state.weather} />\n        <Temperatures weatherData={this.state.weather} />\n        <hr />\n        <Zip zipCode={this.state.zipCode} onZipChange={this.handleUpdatekEvent.bind(this)} />\n      </Container>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}